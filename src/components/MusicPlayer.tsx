import { useState, useRef } from "react";

export default function MusicPlayer() {
  const [currentTrackIndex, setCurrentTrackIndex] = useState(0); // √çndice da m√∫sica atual
  const audioRef = useRef<HTMLAudioElement>(null); // Refer√™ncia ao elemento <audio>

  // Lista de m√∫sicas
  const tracks = [
    {
      title: "Pinwheel",
      src: "/music/pinwheel.mp3", // Caminho da m√∫sica
    },
    {
      title: "Sunrise",
      src: "/music/sunrise.mp3",
    },
    {
      title: "Rainforest",
      src: "/music/rainforest.mp3",
    },
  ];

  // Fun√ß√£o para ir para a pr√≥xima m√∫sica
  const nextTrack = () => {
    setCurrentTrackIndex((prevIndex) =>
      prevIndex === tracks.length - 1 ? 0 : prevIndex + 1
    );
  };

  // Fun√ß√£o para voltar para a m√∫sica anterior
  const prevTrack = () => {
    setCurrentTrackIndex((prevIndex) =>
      prevIndex === 0 ? tracks.length - 1 : prevIndex - 1
    );
  };

  // Atualiza a m√∫sica no <audio> quando o √≠ndice mudar
  const handlePlay = () => {
    if (audioRef.current) {
      audioRef.current.load(); // Recarrega o elemento <audio> com a nova m√∫sica
      audioRef.current.play(); // Inicia a reprodu√ß√£o
    }
  };

  return (
    <div className="music-player flex flex-col items-center p-4 border rounded-md">
      <h2 className="text-lg font-bold mb-2">
        üéµ {tracks[currentTrackIndex].title}
      </h2>
      <audio
        ref={audioRef}
        onLoadedMetadata={handlePlay} // Reproduz quando carregar
        controls
      >
        <source src={tracks[currentTrackIndex].src} type="audio/mpeg" />
        Seu navegador n√£o suporta o player de √°udio.
      </audio>
      <div className="controls flex mt-2 space-x-4">
        <button
          onClick={prevTrack}
          className="p-2 bg-gray-200 rounded hover:bg-gray-300"
        >
          ‚è™ Anterior
        </button>
        <button
          onClick={nextTrack}
          className="p-2 bg-gray-200 rounded hover:bg-gray-300"
        >
          ‚è© Pr√≥xima
        </button>
      </div>
    </div>
  );
}
